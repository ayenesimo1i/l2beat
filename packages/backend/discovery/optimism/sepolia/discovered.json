{
  "name": "optimism",
  "chain": "sepolia",
  "blockNumber": 5526425,
  "configHash": "0x1e1d414d0dfcb6908c1231450b6a5ff8ae5e42ca068203c837f1a8e73d8777ca",
  "version": 3,
  "contracts": [
    {
      "name": "SystemConfig",
      "address": "0x034edD2A225f7f429A63E0f1D2084B9E0A93b538",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xba2492e52F45651B60B8B38d4Ea5E2390C64Ffb1",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0xba2492e52F45651B60B8B38d4Ea5E2390C64Ffb1"],
      "sinceTimestamp": 1691800416,
      "values": {
        "BATCH_INBOX_SLOT": "0x71ac12829d66ee73d8d95bff50b3589745ce57edae70a3fb111a2342464dc597",
        "batcherHash": "0x8F23BB38F531600e5d8FDDaAEC41F13FaB46E98c",
        "batchInbox": "0xff00000000000000000000000000000011155420",
        "gasLimit": 30000000,
        "L1_CROSS_DOMAIN_MESSENGER_SLOT": "0x383f291819e6d54073bc9a648251d97421076bdd101933c0c022219ce9580636",
        "L1_ERC_721_BRIDGE_SLOT": "0x46adcbebc6be8ce551740c29c47c8798210f23f7f4086c41752944352568d5a7",
        "L1_STANDARD_BRIDGE_SLOT": "0x9904ba90dde5696cda05c9e0dab5cbaa0fea005ace4d11218a02ac668dad6376",
        "l1CrossDomainMessenger": "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef",
        "l1ERC721Bridge": "0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f",
        "l1StandardBridge": "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1",
        "L2_OUTPUT_ORACLE_SLOT": "0xe52a667f71ec761b9b381c7b76ca9b852adf7e8905da0e0ad49986a0a6871815",
        "l2OutputOracle": "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F",
        "minimumGasLimit": 21000000,
        "opStackDA": {
          "isSomeTxsLengthEqualToCelestiaDAExample": false,
          "isSequencerSendingBlobTx": true
        },
        "OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT": "0xa04c5bb938ca6fc46d95553abf0a76345ce3e722a30bf4f74928b8e7d852320c",
        "OPTIMISM_PORTAL_SLOT": "0x4b6c74f9e688cb39801f2112c14a8c57232a3fc5202e1444126d4bce86eb19ac",
        "optimismMintableERC20Factory": "0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b",
        "optimismPortal": "0x16Fc5058F25648194471939df75CF27A2fdC48BC",
        "overhead": 0,
        "owner": "0xfd1D2e729aE8eEe2E146c033bf4400fE75284301",
        "resourceConfig": [
          20000000,
          10,
          8,
          1000000000,
          1000000,
          "340282366920938463463374607431768211455"
        ],
        "scalar": "452312848583266388373324160190187140051835877600158453279134889792719822256",
        "sequencerInbox": "0xff00000000000000000000000000000011155420",
        "START_BLOCK_SLOT": "0xa11ee3ab75b40e88a0105e935d17cd36c8faee0138320d776c411291bdbbb19f",
        "startBlock": 4071248,
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "0x57CACBB0d30b01eb2462e5dC940c161aff3230D3",
        "version": "1.12.0",
        "VERSION": 0
      },
      "derivedName": "SystemConfig"
    },
    {
      "name": "DisputeGameFactory",
      "address": "0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1B3cfC1F692076538c9B53750EBc412042D48605",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0x1B3cfC1F692076538c9B53750EBc412042D48605"],
      "sinceTimestamp": 1710820488,
      "values": {
        "gameCount": 103,
        "gameImpls": [
          "0xa2f42e0A3571e14a831bc5eA58cdf8b98D9b11f2",
          "0x54a16603469Dc1F4bf7197908067d858d04864E5",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ],
        "initBonds": ["80000000000000000", "80000000000000000", 0, 0, 0],
        "owner": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B",
        "version": "0.2.0"
      },
      "derivedName": "DisputeGameFactory"
    },
    {
      "name": "OptimismPortal",
      "address": "0x16Fc5058F25648194471939df75CF27A2fdC48BC",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x215b3A2d1766616d1C4701f3D117348711BaAe93",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0x215b3A2d1766616d1C4701f3D117348711BaAe93"],
      "sinceTimestamp": 1691800416,
      "values": {
        "disputeGameFactory": "0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1",
        "disputeGameFinalityDelaySeconds": 302400,
        "guardian": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B",
        "GUARDIAN": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B",
        "l2Sender": "0x000000000000000000000000000000000000dEaD",
        "params": [1000000000, 490798, 5526062],
        "paused": false,
        "proofMaturityDelaySeconds": 604800,
        "respectedGameType": 0,
        "respectedGameTypeUpdatedAt": 0,
        "superchainConfig": "0xC2Be75506d5724086DEB7245bd260Cc9753911Be",
        "SYSTEM_CONFIG": "0x034edD2A225f7f429A63E0f1D2084B9E0A93b538",
        "systemConfig": "0x034edD2A225f7f429A63E0f1D2084B9E0A93b538",
        "version": "3.3.0"
      },
      "derivedName": "OptimismPortal2"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691800416,
      "values": {
        "addressManager": "0x9bFE9c5609311DF1c011c47642253B78a4f33F4B",
        "isUpgrading": false,
        "owner": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B"
      }
    },
    {
      "name": "PermissionedDisputeGame",
      "address": "0x54a16603469Dc1F4bf7197908067d858d04864E5",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1710820488,
      "values": {
        "absolutePrestate": "0x031e3b504740d0b1264e8cf72b6dde0d497184cfb3f98e451c6be8b33bd3f808",
        "claimData": [],
        "claimDataLen": 0,
        "claimedBondFlag": "340282366920938463463374607431768211455",
        "createdAt": 0,
        "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "gameData": [
          1,
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "gameDuration": 604800,
        "gameType": 1,
        "l1Head": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "l2BlockNumber": 0,
        "l2ChainId": 11155420,
        "maxGameDepth": 73,
        "resolvedAt": 0,
        "rootClaim": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "splitDepth": 30,
        "startingBlockNumber": 0,
        "startingOutputRoot": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          0
        ],
        "startingRootHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "status": 0,
        "version": "0.8.1",
        "vm": "0xC29aE51B025f3F58243Cb3331243460A13d8CF33",
        "weth": "0x9bD56B189234FE25CF3547c4343e50C3259e383a"
      }
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef",
      "upgradeability": {
        "type": "resolved delegate proxy",
        "addressManager": "0x9bFE9c5609311DF1c011c47642253B78a4f33F4B",
        "implementationName": "OVM_L1CrossDomainMessenger",
        "implementation": "0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"
      },
      "implementations": ["0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"],
      "sinceTimestamp": 1691800416,
      "values": {
        "MESSAGE_VERSION": 1,
        "messageNonce": "1766847064778384329583297500742918515827483896875618958121606201292631377",
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "0x4200000000000000000000000000000000000007",
        "otherMessenger": "0x4200000000000000000000000000000000000007",
        "paused": false,
        "portal": "0x16Fc5058F25648194471939df75CF27A2fdC48BC",
        "PORTAL": "0x16Fc5058F25648194471939df75CF27A2fdC48BC",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 5000,
        "RELAY_RESERVED_GAS": 40000,
        "superchainConfig": "0xC2Be75506d5724086DEB7245bd260Cc9753911Be",
        "version": "2.3.0"
      },
      "derivedName": "L1CrossDomainMessenger"
    },
    {
      "name": "OptimismMintableERC20Factory",
      "address": "0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846"],
      "sinceTimestamp": 1691800416,
      "values": {
        "bridge": "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1",
        "BRIDGE": "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1",
        "version": "1.9.0"
      }
    },
    {
      "name": "L2OutputOracle",
      "address": "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF243BEd163251380e78068d317ae10f26042B292",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0xF243BEd163251380e78068d317ae10f26042B292"],
      "sinceTimestamp": 1691800416,
      "values": {
        "challenger": "0xfd1D2e729aE8eEe2E146c033bf4400fE75284301",
        "CHALLENGER": "0xfd1D2e729aE8eEe2E146c033bf4400fE75284301",
        "deletedOutputs": [],
        "FINALIZATION_PERIOD_SECONDS": 12,
        "finalizationPeriodSeconds": 12,
        "L2_BLOCK_TIME": 2,
        "l2BlockTime": 2,
        "latestBlockNumber": 9538200,
        "latestOutputIndex": 79484,
        "nextBlockNumber": 9538320,
        "nextOutputIndex": 79485,
        "proposer": "0x49277EE36A024120Ee218127354c4a3591dc90A9",
        "PROPOSER": "0x49277EE36A024120Ee218127354c4a3591dc90A9",
        "startingBlockNumber": 0,
        "startingTimestamp": 1690493568,
        "SUBMISSION_INTERVAL": 120,
        "submissionInterval": 120,
        "version": "1.8.0"
      },
      "derivedName": "L2OutputOracle"
    },
    {
      "name": "DelayedWETH",
      "address": "0x9bD56B189234FE25CF3547c4343e50C3259e383a",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xed081526fCc98820F3D550CB67922aD033b962e0",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0xed081526fCc98820F3D550CB67922aD033b962e0"],
      "sinceTimestamp": 1710820488,
      "values": {
        "config": "0xC2Be75506d5724086DEB7245bd260Cc9753911Be",
        "decimals": 18,
        "delay": 604800,
        "name": "Wrapped Ether",
        "owner": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B",
        "symbol": "WETH",
        "totalSupply": "216665197800000000000",
        "version": "0.2.0"
      }
    },
    {
      "name": "AddressManager",
      "address": "0x9bFE9c5609311DF1c011c47642253B78a4f33F4B",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691800416,
      "values": {
        "owner": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "derivedName": "AddressManager"
    },
    {
      "name": "FaultDisputeGame",
      "address": "0xa2f42e0A3571e14a831bc5eA58cdf8b98D9b11f2",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1710820488,
      "values": {
        "absolutePrestate": "0x031e3b504740d0b1264e8cf72b6dde0d497184cfb3f98e451c6be8b33bd3f808",
        "claimData": [],
        "claimDataLen": 0,
        "claimedBondFlag": "340282366920938463463374607431768211455",
        "createdAt": 0,
        "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "gameData": [
          0,
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "gameDuration": 604800,
        "gameType": 0,
        "l1Head": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "l2BlockNumber": 0,
        "l2ChainId": 11155420,
        "maxGameDepth": 73,
        "resolvedAt": 0,
        "rootClaim": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "splitDepth": 30,
        "startingBlockNumber": 0,
        "startingOutputRoot": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          0
        ],
        "startingRootHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "status": 0,
        "version": "0.8.1",
        "vm": "0xC29aE51B025f3F58243Cb3331243460A13d8CF33",
        "weth": "0x9bD56B189234FE25CF3547c4343e50C3259e383a"
      }
    },
    {
      "name": "MIPS",
      "address": "0xC29aE51B025f3F58243Cb3331243460A13d8CF33",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1710820488,
      "values": {
        "BRK_START": 1073741824,
        "oracle": "0x98b9D322bBce586259283F79aF835744777E88c3",
        "version": "0.1.0"
      }
    },
    {
      "name": "SuperchainConfig",
      "address": "0xC2Be75506d5724086DEB7245bd260Cc9753911Be",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x44674AF65D36b9d4AC6ba4717369AF794c75d9BA",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0x44674AF65D36b9d4AC6ba4717369AF794c75d9BA"],
      "sinceTimestamp": 1701974988,
      "values": {
        "guardian": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B",
        "GUARDIAN_SLOT": "0xd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe68",
        "paused": false,
        "PAUSED_SLOT": "0x54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b6",
        "version": "1.1.0"
      }
    },
    {
      "name": "L1ERC721Bridge",
      "address": "0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d"],
      "sinceTimestamp": 1691800416,
      "values": {
        "messenger": "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef",
        "MESSENGER": "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000014",
        "otherBridge": "0x4200000000000000000000000000000000000014",
        "paused": false,
        "superchainConfig": "0xC2Be75506d5724086DEB7245bd260Cc9753911Be",
        "version": "2.1.0"
      }
    },
    {
      "name": "GnosisSafeL2",
      "address": "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xfb1bffC9d739B8D520DaF37dF666da4C687191EA",
        "modules": []
      },
      "implementations": ["0xfb1bffC9d739B8D520DaF37dF666da4C687191EA"],
      "sinceTimestamp": 1701979656,
      "values": {
        "domainSeparator": "0x37e1f5dd3b92a004a23589b741196c8a214629d4ea3a690ec8e41ae45c689cbb",
        "getChainId": 11155111,
        "getOwners": [
          "0x2E2E33FEdd27FdeCFC851ae98E45a5ecb76904fE",
          "0x1084092Ac2f04c866806CF3d4a385Afa4F6A6C97",
          "0xEA96f8d33Af98839C20547D970EE0961f8865009",
          "0xb3973057A2A57a71D34a75A7a58e663F121f892B",
          "0xA367e326694aa2236CE2886e3e2aa4965EEa1d7f",
          "0xE09d881A1A13C805ED2c6823f0C7E4443A260f2f",
          "0x10303fe151a505bE8aFd23E1d285D3C733BDC721",
          "0xad70Ad7Ac30Cee75EB9638D377EACD8DfDfE0C3c",
          "0xF0871b2F75ecD07e2D709b7a2cc0AF6848c1cE76"
        ],
        "getThreshold": 2,
        "nonce": 10,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "L1StandardBridge",
      "address": "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF",
        "admin": "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc"
      },
      "implementations": ["0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF"],
      "sinceTimestamp": 1691800416,
      "values": {
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef",
        "MESSENGER": "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000010",
        "otherBridge": "0x4200000000000000000000000000000000000010",
        "paused": false,
        "superchainConfig": "0xC2Be75506d5724086DEB7245bd260Cc9753911Be",
        "version": "2.1.0"
      },
      "derivedName": "L1StandardBridge"
    }
  ],
  "eoas": [
    "0x000000000000000000000000000000000000dEaD",
    "0x10303fe151a505bE8aFd23E1d285D3C733BDC721",
    "0x1084092Ac2f04c866806CF3d4a385Afa4F6A6C97",
    "0x2E2E33FEdd27FdeCFC851ae98E45a5ecb76904fE",
    "0x4200000000000000000000000000000000000007",
    "0x4200000000000000000000000000000000000010",
    "0x4200000000000000000000000000000000000014",
    "0x49277EE36A024120Ee218127354c4a3591dc90A9",
    "0x57CACBB0d30b01eb2462e5dC940c161aff3230D3",
    "0x8F23BB38F531600e5d8FDDaAEC41F13FaB46E98c",
    "0xA367e326694aa2236CE2886e3e2aa4965EEa1d7f",
    "0xad70Ad7Ac30Cee75EB9638D377EACD8DfDfE0C3c",
    "0xb3973057A2A57a71D34a75A7a58e663F121f892B",
    "0xE09d881A1A13C805ED2c6823f0C7E4443A260f2f",
    "0xEA96f8d33Af98839C20547D970EE0961f8865009",
    "0xF0871b2F75ecD07e2D709b7a2cc0AF6848c1cE76",
    "0xfd1D2e729aE8eEe2E146c033bf4400fE75284301",
    "0xff00000000000000000000000000000011155420"
  ],
  "abis": {
    "0x034edD2A225f7f429A63E0f1D2084B9E0A93b538": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x16Fc5058F25648194471939df75CF27A2fdC48BC": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function implementationName(address) view returns (string)",
      "function isUpgrading() view returns (bool)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function setAddressManager(address _address)",
      "function setImplementationName(address _address, string _name)",
      "function setProxyType(address _address, uint8 _type)",
      "function setUpgrading(bool _upgrading)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0x1B3cfC1F692076538c9B53750EBc412042D48605": [
      "constructor()",
      "error GameAlreadyExists(bytes32 uuid)",
      "error InsufficientBond()",
      "error NoImplementation(uint32 gameType)",
      "event DisputeGameCreated(address indexed disputeProxy, uint32 indexed gameType, bytes32 indexed rootClaim)",
      "event ImplementationSet(address indexed impl, uint32 indexed gameType)",
      "event InitBondUpdated(uint32 indexed gameType, uint256 indexed newBond)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function create(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) payable returns (address proxy_)",
      "function findLatestGames(uint32 _gameType, uint256 _start, uint256 _n) view returns (tuple(uint256 index, bytes32 metadata, uint64 timestamp, bytes32 rootClaim, bytes extraData)[] games_)",
      "function gameAtIndex(uint256 _index) view returns (uint32 gameType_, uint64 timestamp_, address proxy_)",
      "function gameCount() view returns (uint256 gameCount_)",
      "function gameImpls(uint32) view returns (address)",
      "function games(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) view returns (address proxy_, uint64 timestamp_)",
      "function getGameUUID(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) pure returns (bytes32 uuid_)",
      "function initBonds(uint32) view returns (uint256)",
      "function initialize(address _owner)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setImplementation(uint32 _gameType, address _impl)",
      "function setInitBond(uint32 _gameType, uint256 _initBond)",
      "function transferOwnership(address newOwner)",
      "function version() view returns (string)"
    ],
    "0x215b3A2d1766616d1C4701f3D117348711BaAe93": [
      "constructor(uint256 _proofMaturityDelaySeconds, uint256 _disputeGameFinalityDelaySeconds, uint32 _initialRespectedGameType)",
      "event Initialized(uint8 version)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "function GUARDIAN() view returns (address)",
      "function SYSTEM_CONFIG() view returns (address)",
      "function blacklistDisputeGame(address _disputeGame)",
      "function checkWithdrawal(bytes32 _withdrawalHash) view",
      "function depositTransaction(address _to, uint256 _value, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function disputeGameBlacklist(address) view returns (bool)",
      "function disputeGameFactory() view returns (address)",
      "function disputeGameFinalityDelaySeconds() view returns (uint256)",
      "function donateETH() payable",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function guardian() view returns (address)",
      "function initialize(address _disputeGameFactory, address _systemConfig, address _superchainConfig)",
      "function l2Sender() view returns (address)",
      "function minimumGasLimit(uint64 _byteCount) pure returns (uint64)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function paused() view returns (bool)",
      "function proofMaturityDelaySeconds() view returns (uint256)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx, uint256 _disputeGameIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32) view returns (address disputeGameProxy, uint64 timestamp)",
      "function respectedGameType() view returns (uint32)",
      "function respectedGameTypeUpdatedAt() view returns (uint64)",
      "function setRespectedGameType(uint32 _gameType)",
      "function superchainConfig() view returns (address)",
      "function systemConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x44674AF65D36b9d4AC6ba4717369AF794c75d9BA": [
      "constructor()",
      "event ConfigUpdate(uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event Paused(string identifier)",
      "event Unpaused()",
      "function GUARDIAN_SLOT() view returns (bytes32)",
      "function PAUSED_SLOT() view returns (bytes32)",
      "function guardian() view returns (address guardian_)",
      "function initialize(address _guardian, bool _paused)",
      "function pause(string _identifier)",
      "function paused() view returns (bool paused_)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0x54a16603469Dc1F4bf7197908067d858d04864E5": [
      "constructor(uint32 _gameType, bytes32 _absolutePrestate, uint256 _maxGameDepth, uint256 _splitDepth, uint64 _gameDuration, address _vm, address _weth, address _anchorStateRegistry, uint256 _l2ChainId, address _proposer, address _challenger)",
      "error AlreadyInitialized()",
      "error AnchorRootNotFound()",
      "error BadAuth()",
      "error BondTransferFailed()",
      "error CannotDefendRootClaim()",
      "error ClaimAboveSplit()",
      "error ClaimAlreadyExists()",
      "error ClaimAlreadyResolved()",
      "error ClockNotExpired()",
      "error ClockTimeExceeded()",
      "error DuplicateStep()",
      "error GameDepthExceeded()",
      "error GameNotInProgress()",
      "error InsufficientBond()",
      "error InvalidLocalIdent()",
      "error InvalidParent()",
      "error InvalidPrestate()",
      "error InvalidSplitDepth()",
      "error NoCreditToClaim()",
      "error OutOfOrderResolution()",
      "error UnexpectedRootClaim(bytes32 rootClaim)",
      "error ValidStep()",
      "event Move(uint256 indexed parentIndex, bytes32 indexed claim, address indexed claimant)",
      "event Resolved(uint8 indexed status)",
      "function absolutePrestate() view returns (bytes32 absolutePrestate_)",
      "function addLocalData(uint256 _ident, uint256 _execLeafIdx, uint256 _partOffset)",
      "function attack(uint256 _parentIndex, bytes32 _claim) payable",
      "function claimCredit(address _recipient)",
      "function claimData(uint256) view returns (uint32 parentIndex, address counteredBy, address claimant, uint128 bond, bytes32 claim, uint128 position, uint128 clock)",
      "function claimDataLen() view returns (uint256 len_)",
      "function claimedBondFlag() pure returns (uint128 claimedBondFlag_)",
      "function createdAt() view returns (uint64)",
      "function credit(address) view returns (uint256)",
      "function defend(uint256 _parentIndex, bytes32 _claim) payable",
      "function extraData() pure returns (bytes extraData_)",
      "function gameData() view returns (uint32 gameType_, bytes32 rootClaim_, bytes extraData_)",
      "function gameDuration() view returns (uint64 gameDuration_)",
      "function gameType() view returns (uint32 gameType_)",
      "function getRequiredBond(uint128 _position) view returns (uint256 requiredBond_)",
      "function initialize() payable",
      "function l1Head() pure returns (bytes32 l1Head_)",
      "function l2BlockNumber() pure returns (uint256 l2BlockNumber_)",
      "function l2ChainId() view returns (uint256 l2ChainId_)",
      "function maxGameDepth() view returns (uint256 maxGameDepth_)",
      "function move(uint256 _challengeIndex, bytes32 _claim, bool _isAttack) payable",
      "function resolve() returns (uint8 status_)",
      "function resolveClaim(uint256 _claimIndex) payable",
      "function resolvedAt() view returns (uint64)",
      "function rootClaim() pure returns (bytes32 rootClaim_)",
      "function splitDepth() view returns (uint256 splitDepth_)",
      "function startingBlockNumber() view returns (uint256 startingBlockNumber_)",
      "function startingOutputRoot() view returns (bytes32 root, uint256 l2BlockNumber)",
      "function startingRootHash() view returns (bytes32 startingRootHash_)",
      "function status() view returns (uint8)",
      "function step(uint256 _claimIndex, bool _isAttack, bytes _stateData, bytes _proof)",
      "function version() view returns (string)",
      "function vm() view returns (address vm_)",
      "function weth() view returns (address weth_)"
    ],
    "0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef": [
      "constructor(address _addressManager, string _implementationName)"
    ],
    "0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF": [
      "constructor()",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20DepositInitiated(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20WithdrawalFinalized(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function depositETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function initialize(address _messenger, address _superchainConfig)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x9bD56B189234FE25CF3547c4343e50C3259e383a": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x9bFE9c5609311DF1c011c47642253B78a4f33F4B": [
      "event AddressSet(string indexed name, address newAddress, address oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xa2f42e0A3571e14a831bc5eA58cdf8b98D9b11f2": [
      "constructor(uint32 _gameType, bytes32 _absolutePrestate, uint256 _maxGameDepth, uint256 _splitDepth, uint64 _gameDuration, address _vm, address _weth, address _anchorStateRegistry, uint256 _l2ChainId)",
      "error AlreadyInitialized()",
      "error AnchorRootNotFound()",
      "error BondTransferFailed()",
      "error CannotDefendRootClaim()",
      "error ClaimAboveSplit()",
      "error ClaimAlreadyExists()",
      "error ClaimAlreadyResolved()",
      "error ClockNotExpired()",
      "error ClockTimeExceeded()",
      "error DuplicateStep()",
      "error GameDepthExceeded()",
      "error GameNotInProgress()",
      "error InsufficientBond()",
      "error InvalidLocalIdent()",
      "error InvalidParent()",
      "error InvalidPrestate()",
      "error InvalidSplitDepth()",
      "error NoCreditToClaim()",
      "error OutOfOrderResolution()",
      "error UnexpectedRootClaim(bytes32 rootClaim)",
      "error ValidStep()",
      "event Move(uint256 indexed parentIndex, bytes32 indexed claim, address indexed claimant)",
      "event Resolved(uint8 indexed status)",
      "function absolutePrestate() view returns (bytes32 absolutePrestate_)",
      "function addLocalData(uint256 _ident, uint256 _execLeafIdx, uint256 _partOffset)",
      "function attack(uint256 _parentIndex, bytes32 _claim) payable",
      "function claimCredit(address _recipient)",
      "function claimData(uint256) view returns (uint32 parentIndex, address counteredBy, address claimant, uint128 bond, bytes32 claim, uint128 position, uint128 clock)",
      "function claimDataLen() view returns (uint256 len_)",
      "function claimedBondFlag() pure returns (uint128 claimedBondFlag_)",
      "function createdAt() view returns (uint64)",
      "function credit(address) view returns (uint256)",
      "function defend(uint256 _parentIndex, bytes32 _claim) payable",
      "function extraData() pure returns (bytes extraData_)",
      "function gameData() view returns (uint32 gameType_, bytes32 rootClaim_, bytes extraData_)",
      "function gameDuration() view returns (uint64 gameDuration_)",
      "function gameType() view returns (uint32 gameType_)",
      "function getRequiredBond(uint128 _position) view returns (uint256 requiredBond_)",
      "function initialize() payable",
      "function l1Head() pure returns (bytes32 l1Head_)",
      "function l2BlockNumber() pure returns (uint256 l2BlockNumber_)",
      "function l2ChainId() view returns (uint256 l2ChainId_)",
      "function maxGameDepth() view returns (uint256 maxGameDepth_)",
      "function move(uint256 _challengeIndex, bytes32 _claim, bool _isAttack) payable",
      "function resolve() returns (uint8 status_)",
      "function resolveClaim(uint256 _claimIndex) payable",
      "function resolvedAt() view returns (uint64)",
      "function rootClaim() pure returns (bytes32 rootClaim_)",
      "function splitDepth() view returns (uint256 splitDepth_)",
      "function startingBlockNumber() view returns (uint256 startingBlockNumber_)",
      "function startingOutputRoot() view returns (bytes32 root, uint256 l2BlockNumber)",
      "function startingRootHash() view returns (bytes32 startingRootHash_)",
      "function status() view returns (uint8)",
      "function step(uint256 _claimIndex, bool _isAttack, bytes _stateData, bytes _proof)",
      "function version() view returns (string)",
      "function vm() view returns (address vm_)",
      "function weth() view returns (address weth_)"
    ],
    "0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d": [
      "constructor()",
      "event ERC721BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event ERC721BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC721(address _localToken, address _remoteToken, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC721To(address _localToken, address _remoteToken, address _to, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function deposits(address, address, uint256) view returns (bool)",
      "function finalizeBridgeERC721(address _localToken, address _remoteToken, address _from, address _to, uint256 _tokenId, bytes _extraData)",
      "function initialize(address _messenger, address _superchainConfig)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0xba2492e52F45651B60B8B38d4Ea5E2390C64Ffb1": [
      "constructor()",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function BATCH_INBOX_SLOT() view returns (bytes32)",
      "function L1_CROSS_DOMAIN_MESSENGER_SLOT() view returns (bytes32)",
      "function L1_ERC_721_BRIDGE_SLOT() view returns (bytes32)",
      "function L1_STANDARD_BRIDGE_SLOT() view returns (bytes32)",
      "function L2_OUTPUT_ORACLE_SLOT() view returns (bytes32)",
      "function OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT() view returns (bytes32)",
      "function OPTIMISM_PORTAL_SLOT() view returns (bytes32)",
      "function START_BLOCK_SLOT() view returns (bytes32)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function batchInbox() view returns (address addr_)",
      "function batcherHash() view returns (bytes32)",
      "function gasLimit() view returns (uint64)",
      "function initialize(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config, address _batchInbox, tuple(address l1CrossDomainMessenger, address l1ERC721Bridge, address l1StandardBridge, address l2OutputOracle, address optimismPortal, address optimismMintableERC20Factory) _addresses)",
      "function l1CrossDomainMessenger() view returns (address addr_)",
      "function l1ERC721Bridge() view returns (address addr_)",
      "function l1StandardBridge() view returns (address addr_)",
      "function l2OutputOracle() view returns (address addr_)",
      "function minimumGasLimit() view returns (uint64)",
      "function optimismMintableERC20Factory() view returns (address addr_)",
      "function optimismPortal() view returns (address addr_)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setResourceConfig(tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function startBlock() view returns (uint256 startBlock_)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address addr_)",
      "function version() view returns (string)"
    ],
    "0xC29aE51B025f3F58243Cb3331243460A13d8CF33": [
      "constructor(address _oracle)",
      "function BRK_START() view returns (uint32)",
      "function oracle() view returns (address oracle_)",
      "function step(bytes _stateData, bytes _proof, bytes32 _localContext) returns (bytes32)",
      "function version() view returns (string)"
    ],
    "0xC2Be75506d5724086DEB7245bd260Cc9753911Be": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event SentMessageExtension1(address indexed sender, uint256 value)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize(address _superchainConfig, address _portal)",
      "function messageNonce() view returns (uint256)",
      "function otherMessenger() view returns (address)",
      "function paused() view returns (bool)",
      "function portal() view returns (address)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _value, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xDEe57160aAfCF04c34C887B5962D0a69676d3C8B": [
      "constructor(address _singleton)"
    ],
    "0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OptimismMintableERC20Created(address indexed localToken, address indexed remoteToken, address deployer)",
      "event StandardL2TokenCreated(address indexed remoteToken, address indexed localToken)",
      "function BRIDGE() view returns (address)",
      "function bridge() view returns (address)",
      "function createOptimismMintableERC20(address _remoteToken, string _name, string _symbol) returns (address)",
      "function createOptimismMintableERC20WithDecimals(address _remoteToken, string _name, string _symbol, uint8 _decimals) returns (address)",
      "function createStandardL2Token(address _remoteToken, string _name, string _symbol) returns (address)",
      "function initialize(address _bridge)",
      "function version() view returns (string)"
    ],
    "0xed081526fCc98820F3D550CB67922aD033b962e0": [
      "constructor(uint256 _delay)",
      "event Approval(address indexed src, address indexed guy, uint256 wad)",
      "event Deposit(address indexed dst, uint256 wad)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed src, address indexed dst, uint256 wad)",
      "event Unwrap(address indexed src, uint256 wad)",
      "event Withdrawal(address indexed src, uint256 wad)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address guy, uint256 wad) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function config() view returns (address)",
      "function decimals() view returns (uint8)",
      "function delay() view returns (uint256)",
      "function deposit() payable",
      "function hold(address _guy, uint256 _wad)",
      "function initialize(address _owner, address _config)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function recover(uint256 _wad)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unlock(address _guy, uint256 _wad)",
      "function version() view returns (string)",
      "function withdraw(uint256 _wad)",
      "function withdraw(address _guy, uint256 _wad)",
      "function withdrawals(address, address) view returns (uint256 amount, uint256 timestamp)"
    ],
    "0xF243BEd163251380e78068d317ae10f26042B292": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OutputProposed(bytes32 indexed outputRoot, uint256 indexed l2OutputIndex, uint256 indexed l2BlockNumber, uint256 l1Timestamp)",
      "event OutputsDeleted(uint256 indexed prevNextOutputIndex, uint256 indexed newNextOutputIndex)",
      "function CHALLENGER() view returns (address)",
      "function FINALIZATION_PERIOD_SECONDS() view returns (uint256)",
      "function L2_BLOCK_TIME() view returns (uint256)",
      "function PROPOSER() view returns (address)",
      "function SUBMISSION_INTERVAL() view returns (uint256)",
      "function challenger() view returns (address)",
      "function computeL2Timestamp(uint256 _l2BlockNumber) view returns (uint256)",
      "function deleteL2Outputs(uint256 _l2OutputIndex)",
      "function finalizationPeriodSeconds() view returns (uint256)",
      "function getL2Output(uint256 _l2OutputIndex) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputAfter(uint256 _l2BlockNumber) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputIndexAfter(uint256 _l2BlockNumber) view returns (uint256)",
      "function initialize(uint256 _submissionInterval, uint256 _l2BlockTime, uint256 _startingBlockNumber, uint256 _startingTimestamp, address _proposer, address _challenger, uint256 _finalizationPeriodSeconds)",
      "function l2BlockTime() view returns (uint256)",
      "function latestBlockNumber() view returns (uint256)",
      "function latestOutputIndex() view returns (uint256)",
      "function nextBlockNumber() view returns (uint256)",
      "function nextOutputIndex() view returns (uint256)",
      "function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber) payable",
      "function proposer() view returns (address)",
      "function startingBlockNumber() view returns (uint256)",
      "function startingTimestamp() view returns (uint256)",
      "function submissionInterval() view returns (uint256)",
      "function version() view returns (string)"
    ],
    "0xfb1bffC9d739B8D520DaF37dF666da4C687191EA": [
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ]
  }
}
